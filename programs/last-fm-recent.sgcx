import requests

let username = gReadln("What is the username: ") // ask the user for the last.fm username (eg: Squirre1Z)

// no username
if (not username):
    gPrintln("no username.. try again")
    exit(1)

let API_KEY = gReadln("put the last.fm api key here plz! ") // ask for the api key (won't work without one)

// no api key
if (not API_KEY):
    gPrintln("no apikey.. try again")
    exit(1)


let url = f"https://ws.audioscrobbler.com/2.0/?method=user.getrecenttracks&user={username}&api_key={API_KEY}&format=json&limit=1" // url
var response = requests.get(url) // response
var json = response.json() // json response

// error if error
if (response.status_code != 200):
    gPrintln("ERROR")
    exit(1)


// get the recent track
if ('recenttracks' in json):
    gPrintln("=" * 40)
    
    var track = json['recenttracks']['track'][0]
    
    // check if the track is currently playing
    var now_playing = False
    if ('@attr' in track and 'nowplaying' in track['@attr'] and track['@attr']['nowplaying'] == 'true'):
        now_playing = True
        gPrintln(f"{username} is currently listening to:\n")
    else:
        gPrintln(f"{username}'s recent track was:\n")
    
    gPrintln(f"Track: {track['name']}")
    gPrintln(f"Artist: {track['artist']['#text']}")
    gPrintln(f"Album: {track['album']['#text']}")
    
    // display timestamp if not currently playing
    if (not now_playing and 'date' in track):
        gPrintln(f"Time: {track['date']['#text']}")
    
    gPrintln("=" * 40)
else:
    gPrintln("didn't find any recent data..")
